version: 2.1

jobs:
  build-and-test:
    macos:
      xcode: 16.0.0
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: test
    steps:
    - checkout
    - run: |
        cd ios
        echo "Install flutter"
        brew install --cask flutter
        echo "Install rbrnv"
        brew update && brew upgrade ruby-build
        export SDKROOT="$(xcrun -show-sdk-path -sdk macosx)"
        export RUBY_CONFIGURE_OPTS="CC=$(xcrun -f clang)"
        echo "Install rbrnv v2"
        LDFLAGS="" rbenv install 3.2.1
        rbenv global 3.2.1
        echo "gem install bunde"
        gem install bundler
        echo "Install rosseta"
        softwareupdate --install-rosetta --agree-to-license
        echo "flutter percache"
        flutter precache
        echo "gem install fii"
        gem install ffi -- --enable-libffi-alloc
        bundle update fastlane
        echo "bundle install"
        bundle install
    - run:
        name: Fastlane
        command: |
          cd ios
          bundle exec fastlane distribute_debug

  adhoc:
    macos:
      xcode: 14.2.0
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: adhoc
    steps:
    - checkout
    - run: |
        cd ios
        echo "Install flutter"
        brew install --cask flutter
        echo "Install rbrnv"
        brew update && brew upgrade ruby-build
        export SDKROOT="$(xcrun -show-sdk-path -sdk macosx)"
        export RUBY_CONFIGURE_OPTS="CC=$(xcrun -f clang)"
        echo "Install rbrnv v2"
        LDFLAGS="" rbenv install 3.2.1
        rbenv global 3.2.1
        echo "gem install bunde"
        gem install bundler
        echo "Install rosseta"
        softwareupdate --install-rosetta --agree-to-license
        echo "flutter percache"
        flutter precache
        echo "gem install fii"
        gem install ffi -- --enable-libffi-alloc
        bundle update fastlane
        echo "bundle install"
        bundle install
    - run:
        name: Fastlane
        command: |
          cd ios
          bundle exec fastlane distribute_debug
    - store_artifacts:
        path: output

workflows:
  build-test-adhoc:
    jobs:
    - build-and-test
    - adhoc:
        filters:
          branches:
            only: development
        requires:
        - build-and-test
